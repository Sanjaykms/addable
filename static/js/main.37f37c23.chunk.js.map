{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","rest","restSet","val","style","display","justifyContent","alignItems","flexDirection","flex","gap","onSubmit","e","preventDefault","console","log","type","onChange","name","target","value","required","role","disabled","selected","lead","map","d","backgroundColor","color","padding","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LAoDeA,MAlDf,WACE,IAAI,EAAeC,mBAAS,IAA5B,mBAAKC,EAAL,KAAUC,EAAV,KASIC,EAAI,GAUR,OACE,sBAAKC,MAAO,CAACC,QAAQ,OAAOC,eAAe,SAASC,WAAW,SAASC,cAAc,SAASC,KAAK,WAAWC,IAAI,QAAnH,UACA,uBAAMN,MAAO,CAACC,QAAQ,OAAOC,eAAe,SAASC,WAAW,SAASC,cAAc,SAASC,KAAK,WAAWC,IAAI,QAASC,SApBtH,SAACC,GACRA,EAAEC,iBACFC,QAAQC,IAAIZ,GACTA,GACDW,QAAQC,IAAI,MAEdb,EAAQ,GAAD,mBAAKD,GAAL,CAAUE,MAcjB,UACE,mDACE,uBAAOa,KAAK,OAAOC,SAbV,SAACL,GACdT,EAAIe,KAAKN,EAAEO,OAAOC,OAY2BC,UAAQ,OAEnD,0CACA,yBAAQJ,SAbG,SAACL,GACdT,EAAImB,KAAKV,EAAEO,OAAOC,OAYhB,UACE,wBAAQG,UAAQ,EAACC,UAAQ,IACzB,2CACA,kDACA,kDAGF,2CACA,yBAAQP,SAlBG,SAACL,GACdT,EAAIsB,KAAKb,EAAEO,OAAOC,OAiBhB,UACE,wBAAQG,UAAQ,EAACC,UAAQ,IACzB,8CACA,kDACA,kDAGF,wBAAQR,KAAK,SAAb,qBAEF,8BACGf,EAAKyB,KAAI,SAAAC,GAAC,OAAE,mBAAGvB,MAAO,CAACwB,gBAAgB,OAAOC,MAAM,QAAQC,QAAQ,QAAxD,SAAkEH,EAAET,KAAK,IAAIS,EAAEF,KAAK,IAAIE,EAAEL,gBCnC9FS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.37f37c23.chunk.js","sourcesContent":["import react from \"react\";\nimport React , {useState,useEffect} from \"react\";\nfunction App() {\n  var [rest,restSet]=useState([]);\n  var subm=(e)=>{\n    e.preventDefault();\n    console.log(val);\n    if(val){\n      console.log(\"hi\");\n    }\n    restSet([...rest,val]);\n  }\n  var val={};\n  var handlename=(e)=>{\n    val.name=e.target.value;\n  }\n  var handlerole=(e)=>{\n    val.role=e.target.value;\n  }\n  var handlelead=(e)=>{\n    val.lead=e.target.value;\n  }\n  return (\n    <div style={{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",flexDirection:\"column\",flex:\"1 1 100%\",gap:\"20px\"}}>\n    <form style={{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",flexDirection:\"column\",flex:\"1 1 100%\",gap:\"20px\"}} onSubmit={subm}>\n      <label>Employee name:\n        <input type=\"text\" onChange={handlename} required></input>\n      </label>\n      <label>Role: \n      <select onChange={handlerole}>\n        <option disabled selected></option>\n        <option>Staff</option>\n        <option>senior staff</option>\n        <option>junior</option>\n      </select>\n      </label>\n      <label>Leads: \n      <select onChange={handlelead}>\n        <option disabled selected></option>\n        <option>SE Staff</option>\n        <option>senior staff</option>\n        <option>junior</option>\n      </select>\n      </label>\n      <button type=\"submit\">Save</button>\n    </form>\n    <div>\n      {rest.map(d=><p style={{backgroundColor:\"#222\",color:\"white\",padding:\"10px\"}}>{d.name+\" \"+d.lead+\" \"+d.role}</p>)}\n    </div>\n    </div>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}